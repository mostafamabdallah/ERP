// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Customer model
model Customer {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  address   String   @db.VarChar(255)
  phone     String   @unique @db.VarChar(255)
  status    String   @db.VarChar(20)
  type      String?  @db.VarChar(20)
  createdAt DateTime @default(now()) @map("create_at")
  orders    Order[]
}

// Define the Order model
model Order {
  id           Int         @id @default(autoincrement())
  orderNumber  String
  customerId   Int
  customer     Customer    @relation(fields: [customerId], references: [id])
  items        ItemOrder[]
  deliveryCost Float
  status       String
  createdAt    DateTime    @default(now()) @map("create_at") 
}

// Define the Item model
model Item {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  quantity   Float
  price      Float
  unit       String
  categories Category[]
  orders     ItemOrder[]
}

// Define the Category model
model Category {
  id     Int    @id @default(autoincrement())
  name   String @unique
  Items  Item[]
  itemId Int?
}

// Define the junction table for the many-to-many relationship between Order and Item
model ItemOrder {
  orderId  Int
  order    Order @relation(fields: [orderId], references: [id])
  itemId   Int
  item     Item  @relation(fields: [itemId], references: [id])
  quantity Float

  @@id([orderId, itemId])
}

// model DeliveryMan {
//   id        Int     @id @default(autoincrement())
//   name      String  @db.VarChar(255)
//   phone     String  @db.VarChar(20)
//   latitude  Float
//   longitude Float
//   // orders    Order[]
// }
